{"version":3,"sources":["views/student/AssignmentModal.js","views/student/Student.js","views/utils/Writer.js"],"names":["students","studentId","name","assignmentState","assignmentContent","assignmentDate","PropTypes","AssignmentModal","props","useState","open","setOpen","commentState","setCommentState","commentToggle","size","isOpen","modal","toggle","flush","id","map","tdata","index","targetId","md","className","accordionId","color","initialValue","for","type","checked","onClick","isModify","tableData","title","classDate","classState","assignmentId","assignmentTitle","questionsCount","Student","assignmentModal","setAssignmentModal","clickAssignmentId","setClickAssignmentId","assignmentToggle","tag","outline","animated","style","height","max","value","Writer","previewStyle","plugins","colorSyntax","codeSyntaxHighlight","highlighter","Prism"],"mappings":"yLAmBMA,EAAW,CACb,CACIC,UAAW,IACXC,KAAM,WACNC,gBAAiB,OACjBC,kBAAmB,kNAOnBC,eAAgB,oBAEpB,CACIJ,UAAW,IACXC,KAAM,WACNC,gBAAiB,QACjBC,kBAAmB,KACnBC,eAAgB,oBAEpB,CACIJ,UAAW,IACXC,KAAM,WACNC,gBAAiB,QACjBC,kBAAmB,KACnBC,eAAgB,oBAEpB,CACIJ,UAAW,IACXC,KAAM,WACNC,gBAAiB,OACjBC,kBAAmB,kNAOnBC,eAAgB,qBAQGC,OAC3B,IAkGeC,EAlGS,SAACC,GACrB,MAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAGMC,EAAgB,WAAQD,GAAiBD,EAAe,EAE9D,OACI,eAAC,IAAD,CAAOG,KAAK,KAAKC,OAASR,EAAMS,MAAQC,OAASV,EAAMU,OAAvD,UACI,cAAC,IAAD,qDACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAWC,OAAK,EAACT,KAAMA,EAAMQ,OAPrB,SAACE,GAAST,EAAQD,IAASU,EAAK,IAAMA,EAAK,EAOnD,SACKpB,EAASqB,KAAI,SAACC,EAAOC,GAAR,OACV,eAAC,IAAD,WACI,eAAC,IAAD,CAAiBC,SAAWD,EAAQ,EAApC,UACI,eAAC,IAAD,CAAKE,GAAI,EAAT,UAAcF,EAAQ,EAAtB,KAA6BD,EAAMpB,QACP,SAA1BoB,EAAMnB,gBACF,qCACE,cAAC,IAAD,CAAKuB,UAAU,iBAAf,SAAkCJ,EAAMjB,iBACxC,cAAC,IAAD,CAAKqB,UAAU,iBAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,sBAAMA,UAAS,iDACf,sBAAMA,UAAS,OAAf,SAA2BJ,EAAMnB,0BAI3C,qCACE,cAAC,IAAD,CAAKuB,UAAU,iBAAf,gCACA,cAAC,IAAD,CAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,sBAAMA,UAAS,gDACf,sBAAMA,UAAS,OAAf,SAA2BJ,EAAMnB,6BAMrD,cAAC,IAAD,CAAewB,YAAcJ,EAAQ,EAArC,SACgC,UAA1BD,EAAMnB,gBACF,cAAC,IAAD,CAAOyB,MAAM,QAAb,sGAGA,qCACE,cAAC,IAAD,CAAQC,aAAeP,EAAMlB,oBAC7B,uBACA,eAAC,IAAD,WACI,sBAAKsB,UAAU,SAAf,UACI,cAAC,IAAD,CAAOI,IAAI,kBAAX,6CACA,cAAC,IAAD,CAAWJ,UAAU,UAArB,SACI,cAAC,IAAD,CACIN,GAAG,kBACHlB,KAAK,kBACL6B,KAAK,WACLC,QAAUpB,EACVqB,QAAUnB,EACVC,KAAK,aAKjB,eAAC,IAAD,CAAUC,OAASJ,EAAnB,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkB,IAAI,oBAAX,qBACA,cAAC,IAAD,CAAOV,GAAG,UAAUlB,KAAK,UAAU6B,KAAK,cAGhD,eAAC,IAAD,WACI,cAAC,IAAD,CAAQL,UAAU,GAAGE,MAAM,UAAUK,QAAUzB,EAAMU,OAArD,sCAEU,mBA1D5B,QAqEtB,eAAC,IAAD,WACI,eAAC,IAAD,CAAQU,MAAM,UAAUK,QAAUzB,EAAMU,OAAxC,UACMV,EAAM0B,SAAW,eAAO,eAD9B,kBAEU,GACR1B,EAAM0B,UACJ,cAAC,IAAD,CAAQN,MAAM,SAASK,QAAUzB,EAAMU,OAAvC,sCAIJ,cAAC,IAAD,CAAQU,MAAM,oBAAoBK,QAAUzB,EAAMU,OAAlD,+BAMf,EC7IKiB,G,MAAY,CACd,CACIC,MAAO,0BACPC,UAAW,mBACXC,WAAY,OACZC,aAAc,IACdC,gBAAiB,wCACjBpC,kBAAmB,kNAOnBqC,eAAgB,MAEpB,CACIL,MAAO,0BACPC,UAAW,mBACXC,WAAY,OACZC,aAAc,IACdC,gBAAiB,wCACjBC,eAAgB,IAChBrC,kBAAmB,mNAQvB,CACIgC,MAAO,0BACPC,UAAW,mBACXC,WAAY,OACZC,aAAc,KACdC,gBAAiB,KACjBC,eAAgB,KAEpB,CACIL,MAAO,sCACPC,UAAW,mBACXC,WAAY,QACZC,aAAc,IACdC,gBAAiB,oDACjBC,eAAgB,IAChBrC,kBAAmB,qNAoOZsC,UA1NC,WACZ,MAAwBjC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,EAA8CF,oBAAS,GAAvD,mBAAOkC,EAAP,KAAwBC,EAAxB,KACA,EAAkDnC,mBAAS,KAA3D,mBAAOoC,EAAP,KAA0BC,EAA1B,KAEMC,EAAmB,SAACR,GACtBK,GAAoBD,GACpBG,EAAqBP,EACxB,EAED,OACI,qCACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAWS,IAAI,KAAKtB,UAAU,wDAA9B,UACI,gCACI,mBAAGA,UAAU,uBAAb,eADJ,+BAIA,8BACI,sBAAMA,UAAS,sDAGvB,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAMA,UAAU,OAAOE,MAAM,YAAYqB,SAAO,EAAhD,UACI,cAAC,IAAD,wCAGA,cAAC,IAAD,UACI,cAAC,IAAD,gCAMZ,cAAC,IAAD,UACI,eAAC,IAAD,CAAMvB,UAAU,OAAOE,MAAM,YAAYqB,SAAO,EAAhD,UACI,cAAC,IAAD,wCAGA,cAAC,IAAD,UACI,cAAC,IAAD,gCAMZ,cAAC,IAAD,UACI,eAAC,IAAD,CAAMvB,UAAU,OAAOE,MAAM,YAAYqB,SAAO,EAAhD,UACI,cAAC,IAAD,iCAGA,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,UAAQ,EACRC,MAAO,CACHC,OAAQ,UAEZxB,MAAM,UACNyB,IAAI,IACJC,MAAM,IAPV,6BAahB,cAAC,IAAD,UACI,eAAC,IAAD,CAAM5B,UAAU,OAAOE,MAAM,YAAYqB,SAAO,EAAhD,UACI,cAAC,IAAD,wCAGA,cAAC,IAAD,UACI,cAAC,IAAD,kCAOhB,eAAC,IAAD,CAAOrB,MAAM,QAAb,UACI,oBAAIF,UAAU,gBAAd,mDAGA,uBACA,cAAC,IAAD,CAAQG,aAAa,+PAYzC,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKH,UAAU,SAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAWsB,IAAI,KAAKtB,UAAU,yBAA9B,UACI,mBAAGA,UAAU,6BAAb,eADJ,qCAOZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAWP,OAAK,EAACT,KAAMA,EAAMQ,OAxHjC,SAACE,GAEbT,EADAD,IAASU,EACD,IAEAA,EAEf,EAkHuB,SACKe,EAAUd,KAAI,SAACC,EAAOC,GAAR,OACX,eAAC,IAAD,WACI,eAAC,IAAD,CAAiBC,SAAWD,EAAQ,EAApC,UACI,eAAC,IAAD,WAAOA,EAAQ,EAAf,KAAsBD,EAAMc,SAC5B,cAAC,IAAD,CAAKV,UAAU,wCAAf,SAAyDJ,EAAMe,eAEnE,eAAC,IAAD,CAAeV,YAAcJ,EAAQ,EAArC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAMG,UAAU,OAAOE,MAAM,YAAYqB,SAAO,EAAhD,UACI,cAAC,IAAD,wCAGA,cAAC,IAAD,UACI,eAAC,IAAD,CAAUvB,UAAS,+BAAnB,UAC2B,SAArBJ,EAAMgB,WACF,sBAAMZ,UAAS,iDACf,sBAAMA,UAAS,gDACrB,sBAAMA,UAAS,OAAf,SAA2BJ,EAAMgB,uBAKjD,cAAC,IAAD,UACMhB,EAAMkB,gBACF,eAAC,IAAD,CACEd,UAAU,eACVE,MAAM,YACNqB,SAAO,EACPhB,QAAS,WACLc,EAAiBzB,EAAMiB,aAC1B,EANH,UAOE,cAAC,IAAD,2BAGA,cAAC,IAAD,UACI,cAAC,IAAD,UACKjB,EAAMkB,gBACDlB,EAAMkB,gBACN,mCAIhB,eAAC,IAAD,CACEd,UAAU,OACVE,MAAM,YACNqB,SAAO,EAHT,UAKE,cAAC,IAAD,2BAGA,cAAC,IAAD,UACI,cAAC,IAAD,+CAKhB,cAAC,IAAD,UACI,eAAC,IAAD,CAAMvB,UAAU,OAAOE,MAAM,YAAYqB,SAAO,EAAhD,UACI,cAAC,IAAD,2BAGA,cAAC,IAAD,UACI,eAAC,IAAD,WACM3B,EAAMmB,eADZ,sBAOhB,cAAC,IAAD,CAAOb,MAAM,QAAb,SACMN,EAAMkB,gBACF,qCACE,oBAAId,UAAU,gBAAd,SACMJ,EAAMkB,kBAEZ,uBACA,cAAC,IAAD,CAAQX,aAAeP,EAAMlB,uBAE/B,mEA/EP,MAsFnB,cAAC,EAAD,CAAiBmC,aAAeM,EAAoB3B,OAAS6B,EAAmB9B,MAAQ0B,gBAOnH,C,kCCtSD,0IAae,SAASY,IACvB,OACA,cAAC,IAAD,CACMC,aAAa,WACbC,QAAS,CAACC,IAAa,CAACC,IAAqB,CAAEC,YAAaC,QAGlE,C","file":"static/js/8.5f98cc0e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    AccordionItem,\r\n    AccordionHeader,\r\n    Col,\r\n    AccordionBody,\r\n    Accordion, Alert, Form, Label, FormGroup, Input, Collapse,\r\n} from \"reactstrap\";\r\n\r\nimport '@toast-ui/editor/dist/toastui-editor-viewer.css';\r\nimport { Viewer } from '@toast-ui/react-editor';\r\nimport Writer from \"../utils/Writer\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst students = [\r\n    {\r\n        studentId: \"1\",\r\n        name: \"student1\",\r\n        assignmentState: \"DONE\",\r\n        assignmentContent: \"```java\\n\" +\r\n            \"private String name;\\n\" +\r\n            \"```\\n\" +\r\n            \"- 과제 내용임\\n\" +\r\n            \"- 과제 하기 싫어요 쌤\\n\" +\r\n            \"> 자바 싫어\\n\" +\r\n            \"> 자바 스크립트 싫어\",\r\n        assignmentDate: \"2022-01-06 13:00\",\r\n    },\r\n    {\r\n        studentId: \"2\",\r\n        name: \"student2\",\r\n        assignmentState: \"READY\",\r\n        assignmentContent: null,\r\n        assignmentDate: \"2022-01-06 13:00\",\r\n    },\r\n    {\r\n        studentId: \"3\",\r\n        name: \"student3\",\r\n        assignmentState: \"READY\",\r\n        assignmentContent: null,\r\n        assignmentDate: \"2022-01-06 13:00\",\r\n    },\r\n    {\r\n        studentId: \"4\",\r\n        name: \"student4\",\r\n        assignmentState: \"DONE\",\r\n        assignmentContent: \"```java\\n\" +\r\n            \"private String name;\\n\" +\r\n            \"```\\n\" +\r\n             \"- 과제 내용임\\n\" +\r\n             \"- 과제 하기 싫어요 쌤\\n\" +\r\n             \"> 자바 싫어\\n\" +\r\n             \"> 자바 스크립트 싫어\",\r\n        assignmentDate: \"2022-01-06 13:00\",\r\n    },\r\n];\r\n\r\nfunction Low(props) {\r\n    return null;\r\n}\r\n\r\nLow.propTypes = {children: PropTypes.node};\r\nconst AssignmentModal = (props) => {\r\n    const [open, setOpen] = useState('0');\r\n    const [commentState, setCommentState] = useState(false);\r\n\r\n    const classToggle = (id) => { setOpen(open === id ? '0' : id) };\r\n    const commentToggle = () => { setCommentState(!commentState) }\r\n\r\n    return (\r\n        <Modal size=\"xl\" isOpen={ props.modal } toggle={ props.toggle }>\r\n            <ModalHeader>과제 제출 현황</ModalHeader>\r\n            <ModalBody>\r\n                <Accordion flush open={open} toggle={classToggle}>\r\n                    {students.map((tdata, index) => (\r\n                        <AccordionItem>\r\n                            <AccordionHeader targetId={ index + 1 }>\r\n                                <Col md={4}>{ index + 1 }. { tdata.name }</Col>\r\n                                { tdata.assignmentState === 'DONE'\r\n                                    ? <>\r\n                                        <Col className=\"d-flex px-lg-5\">{ tdata.assignmentDate }</Col>\r\n                                        <Col className=\"d-flex px-lg-5\">\r\n                                            <div className=\"d-flex align-items-md-center\">\r\n                                                <span className={`p-2 bg-success rounded-circle d-inline-block`}></span>\r\n                                                <span className={`mx-2`}>{ tdata.assignmentState }</span>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <>\r\n                                        <Col className=\"d-flex px-lg-5\">미제출</Col>\r\n                                        <Col className=\"d-flex px-lg-5\">\r\n                                            <div className=\"d-flex align-items-md-center\">\r\n                                                <span className={`p-2 bg-danger rounded-circle d-inline-block`}></span>\r\n                                                <span className={`mx-2`}>{ tdata.assignmentState }</span>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </>\r\n                                }\r\n                            </AccordionHeader>\r\n                            <AccordionBody accordionId={ index + 1 }>\r\n                                { tdata.assignmentState === 'READY'\r\n                                    ? <Alert color=\"light\">\r\n                                        과제를 아직 제출하지 않았습니다.\r\n                                    </Alert>\r\n                                    : <>\r\n                                        <Viewer initialValue={ tdata.assignmentContent } />\r\n                                        <br />\r\n                                        <Form>\r\n                                            <div className=\"d-flex\">\r\n                                                <Label for=\"assignmentState\">코멘트 달기</Label>\r\n                                                <FormGroup className=\"mx-lg-3\">\r\n                                                    <Input\r\n                                                        id=\"assignmentState\"\r\n                                                        name=\"assignmentState\"\r\n                                                        type=\"checkbox\"\r\n                                                        checked={ commentState }\r\n                                                        onClick={ commentToggle }\r\n                                                        size=\"xxl\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <Collapse isOpen={ commentState }>\r\n                                                <Col>\r\n                                                    <FormGroup>\r\n                                                        <Label for=\"assignmentContent\">Comment</Label>\r\n                                                        <Input id=\"comment\" name=\"comment\" type=\"text\" />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Button className=\"\" color=\"primary\" onClick={ props.toggle }>\r\n                                                        저장하기\r\n                                                    </Button>{''}\r\n                                                </Col>\r\n                                            </Collapse>\r\n                                        </Form>\r\n                                    </>\r\n                                }\r\n                            </AccordionBody>\r\n                        </AccordionItem>\r\n                    ))}\r\n                </Accordion>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={ props.toggle }>\r\n                    { props.isModify ? \"수정\" : \"등록\" }하기\r\n                </Button>{''}\r\n                { props.isModify && (\r\n                    <Button color=\"danger\" onClick={ props.toggle }>\r\n                        삭제하기\r\n                    </Button>\r\n                )}\r\n                <Button color=\"outline-secondary\" onClick={ props.toggle }>\r\n                    취소\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AssignmentModal;\r\n","import {\r\n    Accordion,\r\n    AccordionBody,\r\n    AccordionHeader,\r\n    AccordionItem,\r\n    Alert,\r\n    Card,\r\n    CardBody,\r\n    CardHeader, CardText,\r\n    CardTitle,\r\n    Col,\r\n    Container, Progress,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport AssignmentModal from \"./AssignmentModal\";\r\nimport \"../../assets/customStyle.css\";\r\n\r\nimport '@toast-ui/editor/dist/toastui-editor-viewer.css';\r\nimport { Viewer } from '@toast-ui/react-editor';\r\n\r\nconst tableData = [\r\n    {\r\n        title: \"java 자료형\",\r\n        classDate: \"2022-01-03 13:00\",\r\n        classState: \"DONE\",\r\n        assignmentId: \"1\",\r\n        assignmentTitle: \"java 자료형 과제1\",\r\n        assignmentContent: \" ```java\\n\" +\r\n            \"private String name;\\n\" +\r\n            \"```\\n\" +\r\n            \"- 어쨋든 강의 내용임\\n\" +\r\n            \"- 여러개 있음\\n\" +\r\n            \"> 자바 좋아\\n\" +\r\n            \"> 자바 스크립트 좋아\",\r\n        questionsCount: \"12\",\r\n    },\r\n    {\r\n        title: \"java 클래스\",\r\n        classDate: \"2022-01-04 13:00\",\r\n        classState: \"DONE\",\r\n        assignmentId: \"2\",\r\n        assignmentTitle: \"java 클래스 과제2\",\r\n        questionsCount: \"7\",\r\n        assignmentContent: \" ```java\\n\" +\r\n            \"private String name;\\n\" +\r\n            \"```\\n\" +\r\n             \"- 어쨋든 강의 내용임\\n\" +\r\n             \"- 여러개 있음\\n\" +\r\n             \"> 자바 좋아\\n\" +\r\n             \"> 자바 스크립트 좋아\",\r\n    },\r\n    {\r\n        title: \"java 추상화\",\r\n        classDate: \"2022-01-05 13:00\",\r\n        classState: \"DONE\",\r\n        assignmentId: null,\r\n        assignmentTitle: null,\r\n        questionsCount: \"4\",\r\n    },\r\n    {\r\n        title: \"java 인터페이스\",\r\n        classDate: \"2022-01-06 13:00\",\r\n        classState: \"READY\",\r\n        assignmentId: \"4\",\r\n        assignmentTitle: \"java 인터페이스 과제4\",\r\n        questionsCount: \"0\",\r\n        assignmentContent: \" ```java\\n\" +\r\n            \"private String name;\\n\" +\r\n            \"```\\n\" +\r\n            \"- 어쨋든 강의 내용임\\n\" +\r\n            \"- 여러개 있음\\n\" +\r\n            \"> 자바 좋아\\n\" +\r\n            \"> 자바 스크립트 좋아\",\r\n    },\r\n];\r\n\r\nconst Student = () => {\r\n    const [open, setOpen] = useState('0');\r\n    const classToggle = (id) => {\r\n        if (open === id) {\r\n            setOpen('0');\r\n        } else {\r\n            setOpen(id);\r\n        }\r\n    };\r\n\r\n    const [assignmentModal, setAssignmentModal] = useState(false);\r\n    const [clickAssignmentId, setClickAssignmentId] = useState('0');\r\n\r\n    const assignmentToggle = (assignmentId) => {\r\n        setAssignmentModal(!assignmentModal)\r\n        setClickAssignmentId(assignmentId)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardTitle tag=\"h3\" className=\"d-flex justify-content-between border-bottom p-3 mb-0\">\r\n                            <div>\r\n                                <i className=\"bi bi-clipboard me-2\"> </i>\r\n                                강의 정보\r\n                            </div>\r\n                            <div>\r\n                                <span className={`p-2 bg-warning rounded-circle d-inline-block`}></span>\r\n                            </div>\r\n                        </CardTitle>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Card className=\"my-2\" color=\"secondary\" outline >\r\n                                        <CardHeader>\r\n                                            시작 일자\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <CardText>\r\n                                                2022-09-01\r\n                                            </CardText>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Card className=\"my-2\" color=\"secondary\" outline >\r\n                                        <CardHeader>\r\n                                            종료 일자\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <CardText>\r\n                                                2022-12-01\r\n                                            </CardText>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Card className=\"my-2\" color=\"secondary\" outline >\r\n                                        <CardHeader>\r\n                                            진행률\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <CardText>\r\n                                                <Progress\r\n                                                    animated\r\n                                                    style={{\r\n                                                        height: '23.5px'\r\n                                                    }}\r\n                                                    color=\"warning\"\r\n                                                    max=\"4\"\r\n                                                    value=\"3\"\r\n                                                >3 of 4</Progress>\r\n                                            </CardText>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Card className=\"my-2\" color=\"secondary\" outline >\r\n                                        <CardHeader>\r\n                                            수강생 수\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <CardText>\r\n                                                112명\r\n                                            </CardText>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Alert color=\"white\">\r\n                                <h4 className=\"alert-heading\">\r\n                                    어쨋든 제목임\r\n                                </h4>\r\n                                <hr />\r\n                                <Viewer initialValue=\"```java\r\n                                 private String name;\r\n                                 ```\r\n                                 - 어쨋든 강의 소개글임\r\n                                 - 여러개 있음\r\n                                 > 이거슨 인용구이다\r\n                                 > 인용구 왜 안보임?\" />\r\n                            </Alert>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Container>\r\n                            <Row className=\"d-flex\">\r\n                                <Col>\r\n                                    <CardTitle tag=\"h3\" className=\"border-bottom p-3 mb-0\">\r\n                                        <i className=\"bi bi-textarea-resize me-2\"> </i>\r\n                                        수업 정보\r\n                                    </CardTitle>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        <CardBody>\r\n                            <Accordion flush open={open} toggle={classToggle}>\r\n                                {tableData.map((tdata, index) => (\r\n                                    <AccordionItem>\r\n                                        <AccordionHeader targetId={ index + 1 }>\r\n                                            <Col>{ index + 1 }. { tdata.title }</Col>\r\n                                            <Col className=\"d-flex justify-content-sm-end px-lg-5\">{ tdata.classDate }</Col>\r\n                                        </AccordionHeader>\r\n                                        <AccordionBody accordionId={ index + 1 }>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card className=\"my-2\" color=\"secondary\" outline >\r\n                                                        <CardHeader>\r\n                                                            수업 상태\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <CardText className={`d-flex align-items-md-center`}>\r\n                                                                { tdata.classState === 'DONE'\r\n                                                                    ? <span className={`p-2 bg-success rounded-circle d-inline-block`}></span>\r\n                                                                    : <span className={`p-2 bg-danger rounded-circle d-inline-block`}></span> }\r\n                                                                <span className={`mx-2`}>{ tdata.classState }</span>\r\n                                                            </CardText>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    { tdata.assignmentTitle\r\n                                                        ? <Card\r\n                                                            className=\"my-2 pointer\"\r\n                                                            color=\"secondary\"\r\n                                                            outline\r\n                                                            onClick={() => {\r\n                                                                assignmentToggle(tdata.assignmentId)\r\n                                                            }}>\r\n                                                            <CardHeader>\r\n                                                                과제\r\n                                                            </CardHeader>\r\n                                                            <CardBody>\r\n                                                                <CardText>\r\n                                                                    {tdata.assignmentTitle\r\n                                                                        ? tdata.assignmentTitle\r\n                                                                        : '과제 없음'}\r\n                                                                </CardText>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                        : <Card\r\n                                                            className=\"my-2\"\r\n                                                            color=\"secondary\"\r\n                                                            outline\r\n                                                            >\r\n                                                            <CardHeader>\r\n                                                                과제\r\n                                                            </CardHeader>\r\n                                                            <CardBody>\r\n                                                                <CardText>과제 없음</CardText>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Card className=\"my-2\" color=\"secondary\" outline >\r\n                                                        <CardHeader>\r\n                                                            질문\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <CardText>\r\n                                                                { tdata.questionsCount }개\r\n                                                            </CardText>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Alert color=\"white\">\r\n                                                { tdata.assignmentTitle\r\n                                                    ? <>\r\n                                                        <h4 className=\"alert-heading\">\r\n                                                            { tdata.assignmentTitle }\r\n                                                        </h4>\r\n                                                        <hr />\r\n                                                        <Viewer initialValue={ tdata.assignmentContent } />\r\n                                                      </>\r\n                                                    : <div>과제 없음</div>\r\n                                                }\r\n                                            </Alert>\r\n                                        </AccordionBody>\r\n                                    </AccordionItem>\r\n                                ))}\r\n                            </Accordion>\r\n                            <AssignmentModal assignmentId={ clickAssignmentId } toggle={ assignmentToggle } modal={ assignmentModal }/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Student;\r\n","import '@toast-ui/editor/dist/toastui-editor.css';\r\nimport { Editor } from '@toast-ui/react-editor';\r\n\r\nimport Prism from 'prismjs';\r\nimport 'prismjs/themes/prism.css';\r\n\r\nimport '@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css';\r\nimport codeSyntaxHighlight from '@toast-ui/editor-plugin-code-syntax-highlight';\r\n\r\nimport 'tui-color-picker/dist/tui-color-picker.css';\r\nimport '@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css';\r\nimport colorSyntax from '@toast-ui/editor-plugin-color-syntax';\r\n\r\nexport default function Writer() {\r\n\treturn (\r\n\t<Editor\r\n      \tpreviewStyle='vertical'\r\n      \tplugins={[colorSyntax, [codeSyntaxHighlight, { highlighter: Prism }]]}\r\n\t/>\r\n\t);\r\n}\r\n"],"sourceRoot":""}